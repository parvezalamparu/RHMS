import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";

// Simulated API fetch
const fetchRequisitionDetails = async (id: string) => {
  // Replace with real API call
  return {
    header: {
      id,
      requisitionNo: "REQ-5001",
      requisitionDate: "2025-08-12",
      generatedBy: "John Doe",
      department: "Pharmacy",
      note: "Required within 2 days.",
    },
    items: [
      {
        slNo: 1,
        itemName: "Paracetamol",
        unit: "Box",
        subUnit: "Tablet",
        total: 500,
        status: "Pending",
      },
      {
        slNo: 2,
        itemName: "Amoxicillin",
        unit: "Box",
        subUnit: "Capsule",
        total: 300,
        status: "Approved",
      },
    ],
  };
};

const ViewRequisitionDetails = () => {
  const { id } = useParams<{ id: string }>();
  const [requisition, setRequisition] = useState<any>(null);

  useEffect(() => {
    if (id) {
      fetchRequisitionDetails(id).then((data) => setRequisition(data));
    }
  }, [id]);

  if (!requisition) return <p>Loading requisition details...</p>;

  const { header, items } = requisition;

  return (
    <div className="pl-2">
      <div>
        <h2 className="text-2xl font-bold text-[#035d67] mb-6 bg-[var(--base-color)] p-2">
          VIEW REQUISITION
        </h2>
      </div>

      {/* HEADER */}
      <div className="mt-4 bg-gray-100 p-3 rounded">
        <div className="grid grid-cols-3 gap-2">
          <p>
            <strong><span className="text-red-600 font-semibold mr-2">☮</span>Requisition No.:</strong> {header.requisitionNo}
          </p>
          <p>
            <strong><span className="text-red-600 font-semibold mr-2">☮</span>Date:</strong> {header.requisitionDate}
          </p>
          <p>
            <strong><span className="text-red-600 font-semibold mr-2">☮</span>Generated By:</strong> {header.generatedBy}
          </p>
          <p>
            <strong><span className="text-red-600 font-semibold mr-2">☮</span>Department:</strong> {header.department}
          </p>
          {header.note && (
            <p>
              <strong><span className="text-red-600 font-semibold mr-2">☮</span>Note:</strong> {header.note}
            </p>
          )}
        </div>
      </div>

      {/* ITEMS TABLE */}
      <div className="mt-6 overflow-auto border border-gray-300 rounded">
        <table className="min-w-[800px] w-full border-collapse text-sm">
          <thead className="bg-[#2fe2fe] text-gray-900 text-left">
            <tr>
              {[
                "Sl. No.",
                "Item Name",
                "Unit",
                "Sub Unit",
                "Total",
                "Status",
              ].map((col, i) => (
                <th key={i} className="border border-gray-300 px-2 py-1">
                  {col}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {items.map((row: any, index: number) => (
              <tr key={index} className="bg-white">
                {[
                  "slNo",
                  "itemName",
                  "unit",
                  "subUnit",
                  "total",
                  "status",
                ].map((key, i) => (
                  <td
                    key={i}
                    className="border border-gray-300 px-2 py-1"
                  >
                    {row[key]}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default ViewRequisitionDetails;
